}
}
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
df4 = filter(df3, Date < "2015-01-08"  & "2015-01-06" < Date)
plot_anom = filter(anom_df, timestamp > as.POSIXct("2015-01-07")  & as.POSIXct("2015-01-08") >= timestamp)
plot_anom2 = filter(plot_anom,Complaint != "HEAT/HOT WATER")
ggplot(plot_anom2) +
geom_bar(aes(x=Complaint,y=anoms, fill = Complaint,colour = "anoms"), stat="identity") +
theme(legend.position="none")+
coord_flip() +
guides(fill=FALSE) +
ylab("Number of Complaints") +
ggtitle("Anomalies Detected on Jan 8th, 2015 ")
df_2 = df[, c("Complaint.Type","Date")]
df2 = group_by(df_2,Date,Complaint.Type)
df3 = summarise(df2, count = n())
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat", "DOOR/WINDOW", "Animal Abuse")
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat",  "Animal Abuse")
#Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type )) +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "Anamolies")) +
ggtitle("Anamoly Detection for Multiple Complaints") +
ylab("Number of Complaints per Day") +
xlim(as.POSIXct("2014-01-01"),max(plot_time$Date))+
ylim(0,125)
View(df)
tester = filter(df2, year == 2015, Month == 1)
tester = filter(df2, Year == 2015, Month == 1)
tester = filter(df, Year == 2015, Month == 1)
View(tester)
tester = filter(df, Year == 2015, Month == "01")
tester = filter(df, Year == 2015, Month == 01)
tester = filter(df, Year == "2015", Month == "01")
View(tester)
df4 = filter(df3, Date < "2015-01-08"  & "2015-01-06" < Date)
plot_anom = filter(anom_df, timestamp > as.POSIXct("2015-01-07")  & as.POSIXct("2015-01-08") >= timestamp)
plot_anom2 = filter(plot_anom,Complaint != "HEAT/HOT WATER")
a = ggplot(plot_anom2) +
geom_bar(aes(x=Complaint,y=anoms, fill = Complaint,colour = "anoms"), stat="identity") +
theme(legend.position="none")+
coord_flip() +
guides(fill=FALSE) +
ylab("Number of Complaints") +
ggtitle("Anomalies Detected on Jan 8th, 2015 ")
png("figs/BarChart-Anamolies.png")
a
dev.off()
df_2 = df[, c("Complaint.Type","Date")]
df2 = group_by(df_2,Date,Complaint.Type)
df3 = summarise(df2, count = n())
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat", "DOOR/WINDOW", "Animal Abuse")
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat",  "Animal Abuse")
#Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
b = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type )) +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "Anamolies")) +
ggtitle("Anamoly Detection for Multiple Complaints") +
ylab("Number of Complaints per Day") +
xlim(as.POSIXct("2014-01-01"),max(plot_time$Date))+
ylim(0,125)
png("figs/Anaom_Multiple.png")
b
dev.off()
png("figs/Anaom_Multiple.png",width = 8,res = 300)
b
dev.off()
png("figs/Anaom_Multiple.png",width = 5,height = 4,res = 300)
b
dev.off()
?png
png("figs/Anaom_Multiple.png",width = 6,height = 4,res = 300, units = "in")
b
dev.off()
png("figs/BarChart-Anamolies.png",width = 6,height = 4,res = 300, units = "in")
a
dev.off()
Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
c = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Heat and Hot Water") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")
png("figs/Heat_HotWater.png",width = 6,height = 4,res = 300, units = "in")
c
dev.off()
d = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Heat and Hot Water") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")
png("figs/Heat_HotWater2.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")
png("figs/Complaints_per_day.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")
png("figs/Complaints_EntireDataset.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")+theme_light()
png("figs/Complaints_EntireDataset.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
d
df4 = filter(df3, Date < "2015-01-08"  & "2015-01-06" < Date)
plot_anom = filter(anom_df, timestamp > as.POSIXct("2015-01-07")  & as.POSIXct("2015-01-08") >= timestamp)
plot_anom2 = filter(plot_anom,Complaint != "HEAT/HOT WATER")
a = ggplot(plot_anom2) +
geom_bar(aes(x=Complaint,y=anoms, fill = Complaint,colour = "anoms"), stat="identity") +
theme(legend.position="none")+
coord_flip() +
guides(fill=FALSE) +
ylab("Number of Complaints") +
ggtitle("Anomalies Detected on Jan 8th, 2015 ")+theme_light()
png("figs/BarChart-Anamolies.png",width = 6,height = 4,res = 300, units = "in")
a
dev.off()
df_2 = df[, c("Complaint.Type","Date")]
df2 = group_by(df_2,Date,Complaint.Type)
df3 = summarise(df2, count = n())
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat", "DOOR/WINDOW", "Animal Abuse")
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat",  "Animal Abuse")
#Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
b = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type )) +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "Anamolies")) +
ggtitle("Anamoly Detection for Multiple Complaints") +
ylab("Number of Complaints per Day") +
xlim(as.POSIXct("2014-01-01"),max(plot_time$Date))+
ylim(0,125)+theme_light()
png("figs/Anaom_Multiple.png",width = 6,height = 4,res = 300, units = "in")
b
dev.off()
Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
c = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Heat and Hot Water") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day") +theme_light()
png("figs/Heat_HotWater.png",width = 6,height = 4,res = 300, units = "in")
c
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")+theme_light()
png("figs/Complaints_EntireDataset.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")+theme_light()+
theme(legend.position = "none") +
png("figs/Complaints_EntireDataset.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
d
df4 = filter(df3, Date < "2015-01-08"  & "2015-01-06" < Date)
plot_anom = filter(anom_df, timestamp > as.POSIXct("2015-01-07")  & as.POSIXct("2015-01-08") >= timestamp)
plot_anom2 = filter(plot_anom,Complaint != "HEAT/HOT WATER")
a = ggplot(plot_anom2) +
geom_bar(aes(x=Complaint,y=anoms, fill = Complaint,colour = "anoms"), stat="identity") +
theme(legend.position="none")+
coord_flip() +
guides(fill=FALSE) +
ylab("Number of Complaints") +
ggtitle("Anomalies Detected on Jan 8th, 2015 ")+theme_light()+
theme(legend.position = "none")
png("figs/BarChart-Anamolies.png",width = 6,height = 4,res = 300, units = "in")
a
dev.off()
df_2 = df[, c("Complaint.Type","Date")]
df2 = group_by(df_2,Date,Complaint.Type)
df3 = summarise(df2, count = n())
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat", "DOOR/WINDOW", "Animal Abuse")
Complaint_Lookup = c("Animal Abuse", "Water Conservation", "OUTSIDE BUILDING", "Non-Residential Heat",  "Animal Abuse")
#Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
b = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type )) +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "Anamolies")) +
ggtitle("Anamoly Detection for Multiple Complaints") +
ylab("Number of Complaints per Day") +
xlim(as.POSIXct("2014-01-01"),max(plot_time$Date))+
ylim(0,125)+theme_light()+
theme(legend.position = "none")
png("figs/Anaom_Multiple.png",width = 6,height = 4,res = 300, units = "in")
b
dev.off()
Complaint_Lookup = c("HEAT/HOT WATER")
plot_time = filter(df3,Complaint.Type %in% Complaint_Lookup )
anom_df$timestamp = as.POSIXct(anom_df$timestamp)
plot_anom = filter(anom_df, Complaint == Complaint_Lookup)
c = ggplot(plot_time, aes(x=Date, y=count, colour = Complaint.Type ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = plot_anom, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Heat and Hot Water") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day") +theme_light()+
theme(legend.position = "none")
png("figs/Heat_HotWater.png",width = 6,height = 4,res = 300, units = "in")
c
dev.off()
df2 = group_by(df,Date)
df3_all = summarise(df2, count = n())
res = AnomalyDetectionTs(df3_all, max_anoms=0.02, direction='both', plot=TRUE,piecewise_median_period_weeks = 3)
d = ggplot(df3_all, aes(x=Date, y=count, color = "blue" ))+ theme(legend.position = "none") +
geom_line() +
geom_point(data = res$anoms, aes(x = timestamp, y = anoms, colour = "red")) +
ggtitle("Anamoly Detection for Complaint Dataset") +
theme(legend.position = "none") +
ylab("Number of Complaints per Day")+theme_light()+
theme(legend.position = "none")
png("figs/Complaints_EntireDataset.png",width = 6,height = 4,res = 300, units = "in")
d
dev.off()
library(RColorBrewer)
col = brewer.pal(3,"Oranges")[2]
col2 = brewer.pal(3,"Set1")[1]
min_date = min(agg2$year)
max_date = max(agg2$year)
title_text = paste(min_date,"-",max_date,sep = "")
a = ggplot(agg2, aes(x=collisions)) + geom_histogram(binwidth = 10,fill=col)+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
xlab("Number of Collisions Per Day")+
ylab("Number Days") +
geom_vline(aes(xintercept =agg3$collisions),color = col2)+
annotate("text", x =agg3$collisions + 220,y = 85,label = "Car Collisions on Jan 08,2015", size = 3)+
theme_light()+
theme(legend.position = "none")
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none")
b
# library(grid)
#   #summary(subset(TWOMINS1, HACKINT == FALSE)$SM)
#   MainTitle = "Distribution of Number of Collisions per Day: 2012 - 2015"
#   grid.newpage()
#   pushViewport(viewport(layout = grid.layout(3, 1, heights = unit(c(0.5, 5,5), "null"))))
#   grid.text(MainTitle, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
#   print(a, vp = viewport(layout.pos.row = 2, layout.pos.col = 1),newpage=FALSE)
#   print(b, vp = viewport(layout.pos.row = 3, layout.pos.col = 1),newpage=FALSE)
#   popViewport(1)
png("figs/Car_Histogram.png",width = 4, height = 4, units = 'in', res = 300)
a
dev.off()
png("figs/Car_Violin_Bur.png",width = 6, height = 4, units = 'in', res = 300)
b
dev.off()
library(dplyr)
library(lubridate)
output = readRDS("output.RDS")
output$DATE = as.character(output$DATE)
dates = as.data.frame(ymd(output$DATE))
colnames(dates) = "date"
dates$Borough = output$BOROUGH
dates$month = month(dates$date)
dates$year = year(dates$date)
dates$day = day(dates$date)
agg = dates %>% group_by(day,month,year,Borough)%>%summarise(collisions = n())
agg2 = dates %>% group_by(day,month,year)%>%summarise(collisions = n())
agg3 = dates%>% filter(year == 2015, month == 01, day == 08)%>% group_by(day,month,year)%>%summarise(collisions = n())
agg4 = dates%>% filter(year == 2015, month == 01, day == 08)%>% group_by(day,month,year,Borough)%>%summarise(collisions = n())
library(RColorBrewer)
col = brewer.pal(3,"Oranges")[2]
col2 = brewer.pal(3,"Set1")[1]
min_date = min(agg2$year)
max_date = max(agg2$year)
title_text = paste(min_date,"-",max_date,sep = "")
a = ggplot(agg2, aes(x=collisions)) + geom_histogram(binwidth = 10,fill=col)+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
xlab("Number of Collisions Per Day")+
ylab("Number Days") +
geom_vline(aes(xintercept =agg3$collisions),color = col2)+
annotate("text", x =agg3$collisions + 220,y = 85,label = "Car Collisions on Jan 08,2015", size = 3)+
theme_light()+
theme(legend.position = "none")
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none")
b
# library(grid)
#   #summary(subset(TWOMINS1, HACKINT == FALSE)$SM)
#   MainTitle = "Distribution of Number of Collisions per Day: 2012 - 2015"
#   grid.newpage()
#   pushViewport(viewport(layout = grid.layout(3, 1, heights = unit(c(0.5, 5,5), "null"))))
#   grid.text(MainTitle, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
#   print(a, vp = viewport(layout.pos.row = 2, layout.pos.col = 1),newpage=FALSE)
#   print(b, vp = viewport(layout.pos.row = 3, layout.pos.col = 1),newpage=FALSE)
#   popViewport(1)
png("figs/Car_Histogram.png",width = 4, height = 4, units = 'in', res = 300)
a
dev.off()
png("figs/Car_Violin_Bur.png",width = 6, height = 4, units = 'in', res = 300)
b
dev.off()
?ggtitle
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(2))
b
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(2)))
b
b
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(0.8)))
b
library(RColorBrewer)
col = brewer.pal(3,"Oranges")[2]
col2 = brewer.pal(3,"Set1")[1]
min_date = min(agg2$year)
max_date = max(agg2$year)
title_text = paste(min_date,"-",max_date,sep = "")
a = ggplot(agg2, aes(x=collisions)) + geom_histogram(binwidth = 10,fill=col)+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
xlab("Number of Collisions Per Day")+
ylab("Number Days") +
geom_vline(aes(xintercept =agg3$collisions),color = col2)+
annotate("text", x =agg3$collisions + 220,y = 85,label = "Car Collisions on Jan 08,2015", size = 3)+
theme_light()+
theme(legend.position = "none")
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(0.8)))
b
# library(grid)
#   #summary(subset(TWOMINS1, HACKINT == FALSE)$SM)
#   MainTitle = "Distribution of Number of Collisions per Day: 2012 - 2015"
#   grid.newpage()
#   pushViewport(viewport(layout = grid.layout(3, 1, heights = unit(c(0.5, 5,5), "null"))))
#   grid.text(MainTitle, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
#   print(a, vp = viewport(layout.pos.row = 2, layout.pos.col = 1),newpage=FALSE)
#   print(b, vp = viewport(layout.pos.row = 3, layout.pos.col = 1),newpage=FALSE)
#   popViewport(1)
png("figs/Car_Histogram.png",width = 4, height = 4, units = 'in', res = 300)
a
dev.off()
png("figs/Car_Violin_Bur.png",width = 6, height = 4, units = 'in', res = 300)
b
dev.off()
library(RColorBrewer)
col = brewer.pal(3,"Oranges")[2]
col2 = brewer.pal(3,"Set1")[1]
min_date = min(agg2$year)
max_date = max(agg2$year)
title_text = paste(min_date,"-",max_date,sep = "")
a = ggplot(agg2, aes(x=collisions)) + geom_histogram(binwidth = 10,fill=col)+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
xlab("Number of Collisions Per Day")+
ylab("Number Days") +
geom_vline(aes(xintercept =agg3$collisions),color = col2)+
annotate("text", x =agg3$collisions + 220,y = 85,label = "Car Collisions on Jan 08,2015", size = 3)+
theme_light()+
theme(legend.position = "none") +
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(0.8)))
b = ggplot(agg, aes(x=Borough,y = collisions,color=Borough)) +
geom_violin() +
geom_boxplot(width=0.1)+
theme(axis.text.x = element_text( size=6))+
annotate("point",x = factor("BRONX"), y = agg4$collisions[1])+
annotate("point",x = factor("BROOKLYN"), y = agg4$collisions[2])+
annotate("point",x = factor("MANHATTAN"), y = agg4$collisions[3])+
annotate("point",x = factor("QUEENS"), y = agg4$collisions[4])+
annotate("point",x = factor("STATEN ISLAND"), y = agg4$collisions[5])+
xlab("Black Point indicates collisions on Jan 08,205") +
theme(axis.title.x = element_text( size=6))+
ggtitle(paste("Number of Collisions per Day",title_text,sep = ": "))+
theme_light()+
theme(legend.position = "none") + theme(plot.title = element_text(size = rel(0.8)))
b
# library(grid)
#   #summary(subset(TWOMINS1, HACKINT == FALSE)$SM)
#   MainTitle = "Distribution of Number of Collisions per Day: 2012 - 2015"
#   grid.newpage()
#   pushViewport(viewport(layout = grid.layout(3, 1, heights = unit(c(0.5, 5,5), "null"))))
#   grid.text(MainTitle, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
#   print(a, vp = viewport(layout.pos.row = 2, layout.pos.col = 1),newpage=FALSE)
#   print(b, vp = viewport(layout.pos.row = 3, layout.pos.col = 1),newpage=FALSE)
#   popViewport(1)
png("figs/Car_Histogram.png",width = 4, height = 4, units = 'in', res = 300)
a
dev.off()
png("figs/Car_Violin_Bur.png",width = 6, height = 4, units = 'in', res = 300)
b
dev.off()
